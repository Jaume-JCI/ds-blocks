# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/00_tests/blocks/tst.blocks.ipynb (unless otherwise specified).

__all__ = ['test_sksplit_generator', 'test_pandas_evaluator']

# Cell
import pytest
import numpy as np
import pandas as pd
import os
import joblib
from IPython.display import display

from sklearn.model_selection import KFold

from block_types.blocks.blocks import *

# Cell
#@pytest.fixture (name='example_people_data')
#def example_people_data_fixture():
#    return example_people_data()

# Comes from blocks.ipynb, cell
def test_sksplit_generator ():
    df = pd.DataFrame ({'a': list(range(10)),
                       'b': list (range(10)),
                       'label': [0]*5+[1]*5})
    df_original = df.copy()
    generator = SkSplitGenerator (KFold (n_splits=5),
                                  label_column='label',
                                  split_column='split')

    reference = pd.concat ([df_original, pd.DataFrame({'split': ['test']*2 + ['training']*8})], axis=1)
    dfr=generator.fit_apply (df)
    assert (reference==dfr).all().all()
    dfr=generator.fit_apply (df)

    reference = pd.concat ([df_original, pd.DataFrame({'split': ['training']*2 + ['test']*2 + ['training']*6})], axis=1)
    assert (reference==dfr).all().all()

    dfr=generator.apply (df)
    reference = pd.concat ([df_original, pd.DataFrame({'split': ['test']*10})], axis=1)
    assert (reference==dfr).all().all()

# Comes from blocks.ipynb, cell
def test_pandas_evaluator ():
    df = pd.DataFrame ({'a': list(range(10)),
                       'b': list (range(10)),
                       'label': [0]*5+[1]*5,
                       'classification': [0]*4+[1]*6})
    assert PandasEvaluator ()(df) == {'accuracy_score': 0.9}

    evaluator = PandasEvaluator (classification_metrics=['accuracy_score', 'auc'],
                                 regression_metrics=['mean_squared_error', 'max_error'],
                                 prediction_col='classification')
    assert evaluator (df)=={'accuracy_score': 0.9, 'auc': 1.0, 'mean_squared_error': 0.1, 'max_error': 1}